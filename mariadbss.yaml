apiVersion: v1
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: handsonakswp
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2024-05-20T20:11:12Z"
    generation: 1
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: handsonakswp
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/version: 11.3.2
      helm.sh/chart: mariadb-18.0.6
    name: handsonakswp-mariadb
    namespace: default
    resourceVersion: "96448"
    uid: a915750d-03fd-4ed9-ba6a-dcac7be4543f
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: handsonakswp
        app.kubernetes.io/name: mariadb
    serviceName: handsonakswp-mariadb
    template:
      metadata:
        annotations:
          checksum/configuration: b6902813b9ef2a773da8f169d610f0633e886b18387fdc4d02660f730af58167
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: handsonakswp
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mariadb
          app.kubernetes.io/version: 11.3.2
          helm.sh/chart: mariadb-18.0.6
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: primary
                    app.kubernetes.io/instance: handsonakswp
                    app.kubernetes.io/name: mariadb
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MARIADB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mariadb-root-password
                name: handsonakswp-mariadb
          - name: MARIADB_USER
            value: bn_wordpress
          - name: MARIADB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mariadb-password
                name: handsonakswp-mariadb
          - name: MARIADB_DATABASE
            value: bitnami_wordpress
          image: docker.io/bitnami/mariadb:11.3.2-debian-12-r5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -ec
              - |
                password_aux="${MARIADB_ROOT_PASSWORD:-}"
                if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                    password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                fi
                mysqladmin status -uroot -p"${password_aux}"
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mariadb
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -ec
              - |
                password_aux="${MARIADB_ROOT_PASSWORD:-}"
                if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                    password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                fi
                mysqladmin ping -uroot -p"${password_aux}"
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 1Gi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mariadb
            name: data
          - mountPath: /opt/bitnami/mariadb/conf/my.cnf
            name: config
            subPath: my.cnf
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/mariadb/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/mariadb/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /opt/bitnami/mariadb/logs
            name: empty-dir
            subPath: app-logs-dir
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash

            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/mariadb/logs; then
              cp -r /opt/bitnami/mariadb/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/mariadb:11.3.2-debian-12-r5
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 1Gi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: handsonakswp-mariadb
        serviceAccountName: handsonakswp-mariadb
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - configMap:
            defaultMode: 420
            name: handsonakswp-mariadb
          name: config
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: handsonakswp
          app.kubernetes.io/name: mariadb
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: handsonakswp-mariadb-5954779996
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: handsonakswp-mariadb-5954779996
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
